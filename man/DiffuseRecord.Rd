% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DiffuseRecord.R
\name{DiffuseRecord}
\alias{DiffuseRecord}
\title{Diffuse a record.}
\usage{
DiffuseRecord(rec, sigma, res = 1, debug = FALSE)
}
\arguments{
\item{rec}{Numeric vector containing the record that is to be diffused.}

\item{sigma}{Numeric vector of the diffusion lengths corresponding to the
depths at which \code{rec} is tabulated. In units of the resolution of
\code{rec} (typically [cm]).}

\item{res}{Resolution of \code{rec} in the same units as \code{sigma}.}

\item{debug}{if \code{TRUE} the values at top and bottom of the diffused
record which are potentially affected by the finite record length are set to
\code{NA}. Defaults to \code{FALSE}. See also Details.}
}
\value{
Numeric vector containing the diffused version of \code{rec}.
}
\description{
This function diffuses a time series or record with a given depth-dependent
diffusion length by convolution with a Gaussian kernel.
}
\details{
This function expects a numeric vector with the depth-dependent diffusion
lengths of the same length as \code{rec}. To calculate the simple case of a
constant diffusion length \code{sigma.const}, provide
\code{sigma = rep(sigma.const, length(rec))} as input.

The input diffusion length is internally scaled according to the resolution
of the record given by \code{res}. The convolution integral is then
solved by a simple summation over the kernel width set to ~ 10 times the
current diffusion length.

For \code{debug = FALSE}: To avoid \code{NAs} at both ends of the diffused
version of \code{rec} resulting from the kernel extending beyond the record
ends, the kernel is clipped at the upper end to the range below the
surface. At the lower end, the record is extended by ~ 10 times the maximum
of \code{sigma} and filled with the mean average value of \code{rec}.
}
\examples{
## Diffuse white noise with a linearly increasing diffusion length
rec <- rnorm(n = 1000)
var.sigma <- seq(1, 8, length.out = 1000)
diffused <- proxysnr:::DiffuseRecord(rec = rec, sigma = var.sigma)
plot(rec, type = 'l', las = 1, xlab = "depth in cm", ylab = "data", main = 
     "white noise diffusion with linearly increasing diffusion length")
lines(diffused, col = "red")
legend('topleft', c("original record", "diffused record"),
       lty = 1, col = 1 : 2, bty = "n")
}
\author{
Thomas MÃ¼nch, modified by Thomas Laepple
}
